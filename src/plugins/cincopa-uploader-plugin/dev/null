var __getOwnPropNames = Object.getOwnPropertyNames;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};

// dist/_chunks/App-CdRBIqMI.js
var require_App_CdRBIqMI = __commonJS({
  "dist/_chunks/App-CdRBIqMI.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, Symbol.toStringTag, { value: "Module" });
    var jsxRuntime = require("react/jsx-runtime");
    var admin = require("@strapi/strapi/admin");
    var reactRouterDom = require("react-router-dom");
    var React = require("react");
    var reactIntl = require("react-intl");
    var designSystem = require("@strapi/design-system");
    var index = require_index_S5YKSo6n();
    var _interopDefault = (e) => e && e.__esModule ? e : { default: e };
    var React__default = /* @__PURE__ */ _interopDefault(React);
    var getTranslation = (id) => `${index.PLUGIN_ID}.${id}`;
    var ModalNewUpload = ({ isOpen, onToggle = () => {
    } }) => {
      const { formatMessage } = reactIntl.useIntl();
      const uploaderRef = React.useRef(null);
      const [uploadData, setUploadData] = React.useState(null);
      React.useEffect(() => {
        const initializeUploader = () => {
          if (isOpen && uploaderRef.current) {
            const uploadUI = new cpUploadUI(uploaderRef.current, {
              upload_url: "https://mediaupload.cincopa.com/post.jpg?uid=230692&d=AAAAcAAJFOAAAAAAAAtAURG&hash=dpuo31hhzdqphu5desjwoc22pl4mszno&addtofid=0",
              multiple: false,
              btnText: formatMessage({
                id: getTranslation("ModalNewUpload.choose-file-btn"),
                defaultMessage: "Choose file to upload"
              }),
              dragAndDropText: formatMessage({
                id: getTranslation("ModalNewUpload.drag-drop-text"),
                defaultMessage: "Drag & Drop"
              }),
              width: "auto",
              height: "auto",
              onUploadComplete: function(data) {
                if (data.uploadState === "Complete") {
                  if (data.rid) {
                    setUploadData({
                      rid: data.rid,
                      thumbnail: `https://rtcdn.cincopa.com/thumb.aspx?size=large&rid=${data.rid}`
                    });
                  }
                }
              }
            });
            uploadUI.start();
          }
        };
        if (isOpen && uploaderRef.current) {
          initializeUploader();
        } else {
          const interval = setInterval(() => {
            if (uploaderRef.current) {
              initializeUploader();
              clearInterval(interval);
            }
          }, 50);
          return () => clearInterval(interval);
        }
      }, [isOpen, formatMessage, onToggle]);
      return /* @__PURE__ */ jsxRuntime.jsx("form", { children: /* @__PURE__ */ jsxRuntime.jsx(designSystem.Modal.Root, { open: isOpen, onOpenChange: onToggle, children: /* @__PURE__ */ jsxRuntime.jsxs(designSystem.Modal.Content, { children: [
        /* @__PURE__ */ jsxRuntime.jsx(designSystem.Modal.Header, { children: /* @__PURE__ */ jsxRuntime.jsx(designSystem.Modal.Title, { children: formatMessage({
          id: getTranslation("ModalNewUpload.header"),
          defaultMessage: "Upload new asset or select from list"
        }) }) }),
        /* @__PURE__ */ jsxRuntime.jsxs(designSystem.Modal.Body, { children: [
          /* @__PURE__ */ jsxRuntime.jsx(designSystem.Box, { ref: uploaderRef }),
          " ",
          uploadData && uploadData.thumbnail && /* @__PURE__ */ jsxRuntime.jsx("div", { children: /* @__PURE__ */ jsxRuntime.jsx("img", { src: uploadData.thumbnail, alt: "Uploaded Thumbnail" }) })
        ] }),
        /* @__PURE__ */ jsxRuntime.jsx(designSystem.Modal.Footer, { children: /* @__PURE__ */ jsxRuntime.jsx(designSystem.Button, { onClick: onToggle, variant: "tertiary", children: formatMessage({
          id: getTranslation("Common.cancel-button"),
          defaultMessage: "Cancel"
        }) }) })
      ] }) }) });
    };
    var Header = () => {
      const { formatMessage } = reactIntl.useIntl();
      const [isNewUploadOpen, setIsNewUploadOpen] = React__default.default.useState(false);
      const handleUploadAsset = () => {
        setIsNewUploadOpen(true);
      };
      const handleOnNewUploadClose = () => {
        setIsNewUploadOpen(false);
      };
      return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, { children: [
        /* @__PURE__ */ jsxRuntime.jsx(
          admin.Layouts.Header,
          {
            title: formatMessage({
              id: getTranslation("HomePage.section-label"),
              defaultMessage: "Cincopa Assets Uploader"
            }),
            primaryAction: /* @__PURE__ */ jsxRuntime.jsx(designSystem.Button, { onClick: handleUploadAsset, children: formatMessage({
              id: getTranslation("HomePage.new-upload-button"),
              defaultMessage: "Upload new asset"
            }) })
          }
        ),
        /* @__PURE__ */ jsxRuntime.jsx(ModalNewUpload, { isOpen: isNewUploadOpen, onToggle: handleOnNewUploadClose })
      ] });
    };
    var AssetItem = ({ asset }) => {
      const assetDate = new Date(asset?.uploaded);
      const formattedDate = assetDate.toLocaleString();
      const handleAssetClick = () => {
        onClick(asset);
      };
      return /* @__PURE__ */ jsxRuntime.jsxs(designSystem.Card, { onClick: handleAssetClick, children: [
        /* @__PURE__ */ jsxRuntime.jsx(designSystem.CardHeader, { children: /* @__PURE__ */ jsxRuntime.jsx(designSystem.CardAsset, { src: asset?.thumbnail?.url }) }),
        /* @__PURE__ */ jsxRuntime.jsx(designSystem.CardBody, { children: /* @__PURE__ */ jsxRuntime.jsxs(designSystem.CardContent, { children: [
          /* @__PURE__ */ jsxRuntime.jsx(designSystem.CardTitle, { children: asset.caption || asset.filename }),
          /* @__PURE__ */ jsxRuntime.jsxs(designSystem.CardSubtitle, { children: [
            "Uploaded: ",
            formattedDate
          ] })
        ] }) })
      ] });
    };
    var AssetsList = ({ userAssets }) => {
      const { formatMessage } = reactIntl.useIntl();
      console.log(userAssets, "userAssets");
      if (!userAssets || userAssets.length === 0) {
        return /* @__PURE__ */ jsxRuntime.jsx(designSystem.Flex, { justifyContent: "center", padding: 5, children: /* @__PURE__ */ jsxRuntime.jsx(designSystem.Typography, { variant: "omega", textColor: "neutral700", children: formatMessage({
          id: getTranslation("AssetsList.no-assets"),
          // Add the appropriate translation key for no assets
          defaultMessage: "No assets found"
        }) }) });
      }
      const assets = userAssets?.map((asset) => /* @__PURE__ */ jsxRuntime.jsx(designSystem.Grid.Item, { col: 3, m: 4, xs: 12, s: 6, children: /* @__PURE__ */ jsxRuntime.jsx(designSystem.Box, { width: "100%", children: /* @__PURE__ */ jsxRuntime.jsx(AssetItem, { asset }) }) }, asset.rid));
      return /* @__PURE__ */ jsxRuntime.jsx(designSystem.Box, { paddingTop: 6, paddingBottom: 8, children: /* @__PURE__ */ jsxRuntime.jsx(designSystem.Grid.Root, { gap: 4, children: assets }) });
    };
    var HomePage = () => {
      const [data, setData] = React.useState(null);
      const [page, setPage] = React.useState(1);
      const [pages, setPages] = React.useState(1);
      React.useEffect(() => {
        fetchData();
      }, []);
      const fetchData = async () => {
        try {
          const response = await fetch("https://api.cincopa.com/v2/asset.list.json?api_token=230692iojeswdxdgkmnxklh25rivovgmpc&page=" + page);
          if (!response.ok) {
            throw new Error("Failed to fetch data");
          }
          const result = await response.json();
          setData((prevData) => {
            return prevData ? { ...result, items: [...prevData.items, ...result.items] } : result;
          });
          setPage((prevPage) => prevPage + 1);
          setPages(result?.items_data.pages_count);
        } catch (err) {
        }
      };
      const loadMoreAssets = () => {
        fetchData();
      };
      return /* @__PURE__ */ jsxRuntime.jsx(admin.Layouts.Root, { children: /* @__PURE__ */ jsxRuntime.jsxs(admin.Page.Main, { children: [
        /* @__PURE__ */ jsxRuntime.jsx(Header, {}),
        /* @__PURE__ */ jsxRuntime.jsxs(admin.Layouts.Content, { children: [
          /* @__PURE__ */ jsxRuntime.jsx(AssetsList, { userAssets: data?.items }),
          /* @__PURE__ */ jsxRuntime.jsx(designSystem.Flex, { justifyContent: "center", children: /* @__PURE__ */ jsxRuntime.jsx(designSystem.Button, { onClick: loadMoreAssets, children: "Load More" }) })
        ] })
      ] }) });
    };
    var App = () => {
      return /* @__PURE__ */ jsxRuntime.jsxs(reactRouterDom.Routes, { children: [
        /* @__PURE__ */ jsxRuntime.jsx(reactRouterDom.Route, { index: true, element: /* @__PURE__ */ jsxRuntime.jsx(HomePage, {}) }),
        /* @__PURE__ */ jsxRuntime.jsx(reactRouterDom.Route, { path: "*", element: /* @__PURE__ */ jsxRuntime.jsx(admin.Page.Error, {}) })
      ] });
    };
    exports2.App = App;
  }
});

// dist/_chunks/CincopaSettings-C2vpMCqu.js
var require_CincopaSettings_C2vpMCqu = __commonJS({
  "dist/_chunks/CincopaSettings-C2vpMCqu.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, Symbol.toStringTag, { value: "Module" });
    var jsxRuntime = require("react/jsx-runtime");
    var React = require("react");
    var admin = require("@strapi/strapi/admin");
    var designSystem = require("@strapi/design-system");
    var CincopaSettings = () => {
      const { get, post } = admin.useFetchClient();
      const [apiToken, setApiToken] = React.useState("");
      React.useEffect(() => {
        const fetchToken = async () => {
          try {
            const response = await get("/cincopa-uploader-plugin/token");
            setApiToken(response.data?.token || "");
          } catch (error) {
            console.error("Error fetching API token:", error);
          }
        };
        fetchToken();
      }, []);
      const handleSave = async () => {
        try {
          await post("/cincopa-uploader-plugin/token", { token: apiToken });
          alert("API Token saved successfully!");
        } catch (error) {
          console.error("Error saving API token:", error);
        }
      };
      return /* @__PURE__ */ jsxRuntime.jsxs(admin.Page.Main, { children: [
        /* @__PURE__ */ jsxRuntime.jsx(admin.Layouts.Header, { title: "Configuration" }),
        /* @__PURE__ */ jsxRuntime.jsx(admin.Layouts.Content, { children: /* @__PURE__ */ jsxRuntime.jsxs(designSystem.Box, { padding: 8, background: "white", children: [
          /* @__PURE__ */ jsxRuntime.jsx(
            designSystem.TextInput,
            {
              label: "Cincoap API Token",
              placeholder: "Enter your API token",
              value: apiToken,
              onChange: (e) => setApiToken(e.target.value)
            }
          ),
          /* @__PURE__ */ jsxRuntime.jsx(
            designSystem.Button,
            {
              onClick: handleSave,
              style: { marginTop: "10px" },
              children: "Save"
            }
          )
        ] }) })
      ] });
    };
    exports2.default = CincopaSettings;
  }
});

// dist/_chunks/en-B4KWt_jN.js
var require_en_B4KWt_jN = __commonJS({
  "dist/_chunks/en-B4KWt_jN.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, Symbol.toStringTag, { value: "Module" });
    var en = {};
    exports2.default = en;
  }
});

// dist/_chunks/index-S5YKSo6n.js
var require_index_S5YKSo6n = __commonJS({
  "dist/_chunks/index-S5YKSo6n.js"(exports2) {
    "use strict";
    var React = require("react");
    var jsxRuntime = require("react/jsx-runtime");
    var __variableDynamicImportRuntimeHelper = (glob, path, segs) => {
      const v = glob[path];
      if (v) {
        return typeof v === "function" ? v() : Promise.resolve(v);
      }
      return new Promise((_, reject) => {
        (typeof queueMicrotask === "function" ? queueMicrotask : setTimeout)(
          reject.bind(
            null,
            new Error(
              "Unknown variable dynamic import: " + path + (path.split("/").length !== segs ? ". Note that variables only represent file names one level deep." : "")
            )
          )
        );
      });
    };
    var PLUGIN_ID = "cincopa-uploader-plugin";
    var Initializer = ({ setPlugin }) => {
      const ref = React.useRef(setPlugin);
      React.useEffect(() => {
        ref.current(PLUGIN_ID);
      }, []);
      return null;
    };
    var Logo = () => /* @__PURE__ */ jsxRuntime.jsx("svg", { version: "1.0", xmlns: "http://www.w3.org/2000/svg", width: "16", height: "16", viewBox: "0 0 48.000000 48.000000", preserveAspectRatio: "xMidYMid meet", children: /* @__PURE__ */ jsxRuntime.jsxs(
      "g",
      {
        transform: "translate(0.000000,48.000000) scale(0.100000,-0.100000)",
        fill: "#8e8ea9",
        stroke: "none",
        children: [
          /* @__PURE__ */ jsxRuntime.jsx("path", { d: "M203 470 c-55 -11 -91 -31 -130 -72 -44 -45 -63 -96 -63 -165 1 -101\n    46 -169 131 -195 76 -22 159 27 159 94 0 46 -18 68 -74 93 -100 44 -134 121\n    -81 184 14 16 42 35 63 42 20 6 41 15 47 20 10 10 7 10 -52 -1z" }),
          /* @__PURE__ */ jsxRuntime.jsx("path", { d: "M255 411 c-39 -10 -69 -29 -84 -54 -17 -27 -1 -41 73 -62 81 -23 126\n    -67 126 -124 0 -49 -20 -93 -64 -140 -30 -32 -30 -33 -6 -26 121 36 188 133\n    177 255 -6 67 -34 121 -71 138 -34 15 -115 23 -151 13z" })
        ]
      }
    ) });
    var PluginIcon = () => /* @__PURE__ */ jsxRuntime.jsx(Logo, {});
    var index = {
      register(app) {
        app.addMenuLink({
          to: `plugins/${PLUGIN_ID}`,
          icon: PluginIcon,
          intlLabel: {
            id: `${PLUGIN_ID}.plugin.name`,
            defaultMessage: "Cincopa Assets Uploader"
          },
          Component: async () => {
            const { App } = await Promise.resolve().then(() => require_App_CdRBIqMI());
            return App;
          }
        });
        app.createSettingSection(
          {
            id: "cincopa-uploader",
            intlLabel: {
              id: "cincopa-uploader-plugin.settings.label",
              defaultMessage: "Cincopa Uploader"
            }
          },
          [
            {
              id: "cincopa-uploader-settings",
              intlLabel: {
                id: "cincopa-uploader-plugin.settings.page.label",
                defaultMessage: "Configuration"
              },
              to: "/settings/cincopa-uploader",
              Component: async () => Promise.resolve().then(() => require_CincopaSettings_C2vpMCqu())
            }
          ]
        );
        app.registerPlugin({
          id: PLUGIN_ID,
          initializer: Initializer,
          isReady: false,
          name: PLUGIN_ID
        });
        const script = document.createElement("script");
        script.src = "https://wwwcdn.cincopa.com/_cms/ugc/uploaderui.js";
        script.async = true;
        document.body.appendChild(script);
        script.onload = () => {
        };
      },
      async registerTrads({ locales }) {
        return Promise.all(
          locales.map(async (locale) => {
            try {
              const { default: data } = await __variableDynamicImportRuntimeHelper(/* @__PURE__ */ Object.assign({ "./translations/en.json": () => Promise.resolve().then(() => require_en_B4KWt_jN()) }), `./translations/${locale}.json`, 3);
              return { data, locale };
            } catch {
              return { data: {}, locale };
            }
          })
        );
      }
    };
    exports2.PLUGIN_ID = PLUGIN_ID;
    exports2.index = index;
  }
});

// dist/admin/index.js
var require_admin = __commonJS({
  "dist/admin/index.js"(exports2, module2) {
    "use strict";
    var index = require_index_S5YKSo6n();
    module2.exports = index.index;
  }
});

// dist/server/index.js
var require_server = __commonJS({
  "dist/server/index.js"(exports2, module2) {
    "use strict";
    var bootstrap = ({ strapi }) => {
    };
    var destroy = ({ strapi }) => {
    };
    var register = ({ strapi }) => {
    };
    var config = {
      default: {},
      validator() {
      }
    };
    var cincopaAsset = {
      kind: "collectionType",
      collectionName: "cincopaAssets",
      info: {
        description: "Cincopa assets collection type",
        displayName: "Cincopa Asset",
        singularName: "cincopa-asset",
        pluralName: "cincopa-assets"
      },
      pluginOptions: {
        "content-manager": {
          visible: true
        },
        "content-type-builder": {
          visible: true
        }
      },
      options: {
        draftAndPublish: false
      },
      attributes: {
        title: {
          label: "Asset Title",
          type: "string",
          private: false,
          required: true,
          maxLength: 250,
          configurable: true
        },
        descriptoion: {
          label: "Asset Description",
          type: "string",
          private: false,
          required: true,
          maxLength: 400,
          configurable: true
        },
        asset_rid: {
          label: "Asset RID",
          type: "string",
          required: true
        }
      }
    };
    var contentTypes = {
      "cincopa-asset": { schema: cincopaAsset }
    };
    var controller = ({ strapi }) => ({
      index(ctx) {
        ctx.body = strapi.plugin("cincopa-uploader-plugin").service("service").getWelcomeMessage();
      }
    });
    var cincopaSettings = ({ strapi }) => ({
      getToken(ctx) {
        ctx.body = strapi.plugin("cincopa-uploader-plugin").service("service").getCincopaToken();
      }
    });
    var controllers = {
      controller,
      cincopaSettings
    };
    var middlewares = {};
    var policies = {};
    var contentAPIRoutes = [
      {
        method: "GET",
        path: "/",
        // name of the controller file & the method.
        handler: "controller.index",
        config: {
          policies: []
        }
      }
    ];
    var routes = {
      "content-api": {
        type: "content-api",
        routes: contentAPIRoutes
      }
      // admin: {
      //   type: 'admin',
      //   routes: adminRoutes,
      // },
    };
    var service = ({ strapi }) => ({
      getWelcomeMessage() {
        return "Welcome to Strapi \u{1F680}";
      },
      getCincopaToken() {
        return "Gettt token";
      }
    });
    var services = {
      service
    };
    var index = {
      bootstrap,
      destroy,
      register,
      config,
      controllers,
      contentTypes,
      middlewares,
      policies,
      routes,
      services
    };
    module2.exports = index;
  }
});

// <stdin>
require_admin();
require_server();
